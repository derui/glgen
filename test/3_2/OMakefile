########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# The standard OMakefile.
# You will usually need to modify this file for your project.

################################################
# Configuration.  You may want to modify any of these configuration
# variables.
#

open MyFunction
open MyUtil

.PHONY: 3_2

#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
	sdlcaml
	sdlcaml_image
	threads
	oUnit
	bigarray
	ppx_simplespec
	typedvec.ppx
#
if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

OCAMLFINDFLAGS = 

#
# Include path
#
OCAMLINCLUDES += $(file $(BIG_ROOT)/src) $(file $(BIG_ROOT)/gen)

#
# Compile native or byte code?
#
# The default values are defined as follows:
#
NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

#
# Various options
#
OCAMLFLAGS    += -bin-annot -thread -g
# OCAMLCFLAGS   +=
# OCAMLOPTFLAGS +=
MY_LINK_FLAGS = -DDEBUG $(shell sdl2-config --cflags --libs)
if $(IsMac)
	MY_LINK_FLAGS += -framework OpenGL
	export
else
	MY_LINK_FLAGS += -lGL
	export

OCAML_LINK_FLAGS += -cclib "$(MY_LINK_FLAGS) -L$(file $(BIG_ROOT)/src)"
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
# OCamlGeneratedFiles(parser.ml lexer.ml)

################################################
# Build bindings for OCaml to C.
#

#
OCAML_LIBS += 
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS +=
# OCAML_LIB_FLAGS += -cclib -lsdl
# OCAML_LIB_FLAGS += -verbose
#
# need sdlcaml library

FILES[] = 
	test_gl_modern
	test_gl_uniform
	test_gl_matrix
	test_gl_matrix_transform
	test_gl_interpolation
	test_gl_indexed_draw
	test_gl_matrix_world
	test_gl_matrix_camera
	test_gl_basic_texture

section rule
	OCAML_LIBS += $(file $(BIG_ROOT)/gen/ogl_3_2) $(file $(BIG_ROOT)/src/ogl)

	foreach(x => ..., $(FILES))
		3_2: $(OCamlProgram $x, $x test_util)
		export
	export

3_2:
	foreach(x => ..., $(FILES))
		./$x$(EXE)
